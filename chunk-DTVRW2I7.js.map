{
  "version": 3,
  "sources": ["src/app/services/auth.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport { AuthState, User } from '../models/auth.model';\nimport { BehaviorSubject } from \"rxjs\";\nimport { AuthServiceInterface } from \"../services/auth.service.interface\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements AuthServiceInterface {\n\n  private _authState = new BehaviorSubject<AuthState>({\n    user: null,\n    loading: false,\n    error: null\n  });\n\n  authState$ = this._authState.asObservable();\n\n  async signInWithGoogle(): Promise<void> {\n    this._authState.next({...this._authState.value, loading: true, error: null});\n\n    const mockUser: User = {\n      uid: 'google-user-123',\n      email: 'user@gmail.com',\n      displayName: 'Google User',\n      photoURL: 'https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg',\n      providerId: 'google.com'\n    };\n    localStorage.setItem('authToken', 'google-token-123');\n    this._authState.next({user: mockUser, loading: false, error: null});\n  }\n\n  async signInWithGitHub(): Promise<void> {\n    this._authState.next({...this._authState.value, loading: true, error: null});\n\n    const mockUser: User = {\n      uid: 'github-user-123',\n      email: 'user@github.com',\n      displayName: 'GitHub User',\n      photoURL: 'https://images.pexels.com/photos/614810/pexels-photo-614810.jpeg',\n      providerId: 'github.com'\n    };\n    localStorage.setItem('authToken', 'github-token-123');\n    this._authState.next({user: mockUser, loading: false, error: null});\n  }\n\n  async signInWithApple(): Promise<void> {\n    this._authState.next({...this._authState.value, loading: true, error: null});\n\n    const mockUser: User = {\n      uid: 'apple-user-123',\n      email: 'user@icloud.com',\n      displayName: 'Apple User',\n      photoURL: 'https://images.pexels.com/photos/1043471/pexels-photo-1043471.jpeg',\n      providerId: 'apple.com'\n    };\n    localStorage.setItem('authToken', 'apple-token-123');\n    this._authState.next({user: mockUser, loading: false, error: null});\n  }\n\n  async signOut(): Promise<void> {\n    this._authState.next({...this._authState.value, loading: true});\n\n    try {\n      localStorage.removeItem('authToken');\n      this._authState.next({user: null, loading: false, error: null});\n    } catch (error: any) {\n      this._authState.next({\n        ...this._authState.value,\n        loading: false,\n        error: error.message\n      });\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;AAQM,IAAO,eAAP,MAAO,aAAW;EAHxB,cAAA;AAKU,SAAA,aAAa,IAAI,gBAA2B;MAClD,MAAM;MACN,SAAS;MACT,OAAO;KACR;AAED,SAAA,aAAa,KAAK,WAAW,aAAY;;EAEnC,mBAAgB;;AACpB,WAAK,WAAW,KAAK,iCAAI,KAAK,WAAW,QAApB,EAA2B,SAAS,MAAM,OAAO,KAAI,EAAC;AAE3E,YAAM,WAAiB;QACrB,KAAK;QACL,OAAO;QACP,aAAa;QACb,UAAU;QACV,YAAY;;AAEd,mBAAa,QAAQ,aAAa,kBAAkB;AACpD,WAAK,WAAW,KAAK,EAAC,MAAM,UAAU,SAAS,OAAO,OAAO,KAAI,CAAC;IACpE;;EAEM,mBAAgB;;AACpB,WAAK,WAAW,KAAK,iCAAI,KAAK,WAAW,QAApB,EAA2B,SAAS,MAAM,OAAO,KAAI,EAAC;AAE3E,YAAM,WAAiB;QACrB,KAAK;QACL,OAAO;QACP,aAAa;QACb,UAAU;QACV,YAAY;;AAEd,mBAAa,QAAQ,aAAa,kBAAkB;AACpD,WAAK,WAAW,KAAK,EAAC,MAAM,UAAU,SAAS,OAAO,OAAO,KAAI,CAAC;IACpE;;EAEM,kBAAe;;AACnB,WAAK,WAAW,KAAK,iCAAI,KAAK,WAAW,QAApB,EAA2B,SAAS,MAAM,OAAO,KAAI,EAAC;AAE3E,YAAM,WAAiB;QACrB,KAAK;QACL,OAAO;QACP,aAAa;QACb,UAAU;QACV,YAAY;;AAEd,mBAAa,QAAQ,aAAa,iBAAiB;AACnD,WAAK,WAAW,KAAK,EAAC,MAAM,UAAU,SAAS,OAAO,OAAO,KAAI,CAAC;IACpE;;EAEM,UAAO;;AACX,WAAK,WAAW,KAAK,iCAAI,KAAK,WAAW,QAApB,EAA2B,SAAS,KAAI,EAAC;AAE9D,UAAI;AACF,qBAAa,WAAW,WAAW;AACnC,aAAK,WAAW,KAAK,EAAC,MAAM,MAAM,SAAS,OAAO,OAAO,KAAI,CAAC;MAChE,SAAS,OAAY;AACnB,aAAK,WAAW,KAAK,iCAChB,KAAK,WAAW,QADA;UAEnB,SAAS;UACT,OAAO,MAAM;UACd;MACH;IACF;;;AAjEsB;;mCAAX,cAAW;AAAA;gFAAX,cAAW,SAAX,aAAW,WAAA,YAFV,OAAM,CAAA;AAEd,IAAO,cAAP;;sEAAO,aAAW,CAAA;UAHvB;WAAW;MACV,YAAY;KACb;;;",
  "names": []
}
