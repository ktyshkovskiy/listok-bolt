{
  "version": 3,
  "sources": ["src/app/components/login/login.component.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { AuthState } from '../../models/auth.model';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule\n  ],\n  template: `\n    <div class=\"login-container\">\n      <mat-card class=\"login-card\">\n        <mat-card-header>\n          <mat-card-title>Welcome to Listok</mat-card-title>\n          <mat-card-subtitle>Sign in to manage your lists</mat-card-subtitle>\n        </mat-card-header>\n        \n        <mat-card-content>\n          <div class=\"login-buttons\" *ngIf=\"(authState$ | async) as authState\">\n            <button \n              mat-raised-button \n              color=\"primary\" \n              class=\"social-button google-button\"\n              [disabled]=\"authState.loading\"\n              (click)=\"signInWithGoogle()\">\n              <mat-icon>account_circle</mat-icon>\n              Continue with Google\n            </button>\n            \n            <button \n              mat-raised-button \n              color=\"accent\" \n              class=\"social-button github-button\"\n              [disabled]=\"authState.loading\"\n              (click)=\"signInWithGitHub()\">\n              <mat-icon>code</mat-icon>\n              Continue with GitHub\n            </button>\n            \n            <button \n              mat-raised-button \n              class=\"social-button apple-button\"\n              [disabled]=\"authState.loading\"\n              (click)=\"signInWithApple()\">\n              <mat-icon>phone_iphone</mat-icon>\n              Continue with Apple\n            </button>\n            \n            <div class=\"loading-spinner\" *ngIf=\"authState.loading\">\n              <mat-spinner diameter=\"30\"></mat-spinner>\n              <p>Signing you in...</p>\n            </div>\n            \n            <div class=\"error-message\" *ngIf=\"authState.error\">\n              <mat-icon color=\"warn\">error</mat-icon>\n              <p>{{ authState.error }}</p>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  `,\n  styles: [`\n    .login-container {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      min-height: 100vh;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      padding: 20px;\n    }\n    \n    .login-card {\n      max-width: 400px;\n      width: 100%;\n      padding: 24px;\n      border-radius: 16px;\n      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);\n    }\n    \n    mat-card-header {\n      text-align: center;\n      margin-bottom: 24px;\n    }\n    \n    mat-card-title {\n      font-size: 28px;\n      font-weight: 600;\n      margin-bottom: 8px;\n    }\n    \n    mat-card-subtitle {\n      font-size: 16px;\n      opacity: 0.7;\n    }\n    \n    .login-buttons {\n      display: flex;\n      flex-direction: column;\n      gap: 16px;\n    }\n    \n    .social-button {\n      height: 48px;\n      font-size: 16px;\n      font-weight: 500;\n      border-radius: 8px;\n      text-transform: none;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 12px;\n    }\n    \n    .google-button {\n      background-color: #4285f4;\n      color: white;\n    }\n    \n    .github-button {\n      background-color: #333;\n      color: white;\n    }\n    \n    .apple-button {\n      background-color: #000;\n      color: white;\n    }\n    \n    .loading-spinner {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: 12px;\n      padding: 20px;\n    }\n    \n    .error-message {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      padding: 12px;\n      background-color: #ffebee;\n      border-radius: 8px;\n      color: #c62828;\n    }\n    \n    @media (max-width: 480px) {\n      .login-card {\n        margin: 0;\n        padding: 20px;\n      }\n      \n      .social-button {\n        height: 44px;\n        font-size: 14px;\n      }\n    }\n  `]\n})\nexport class LoginComponent implements OnInit {\n  authState$: Observable<AuthState>;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.authState$ = this.authService.authState$;\n  }\n\n  ngOnInit(): void {\n    // Check if user is already authenticated\n    this.authState$.subscribe(state => {\n      if (state.user && !state.loading) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n\n  async signInWithGoogle(): Promise<void> {\n    await this.authService.signInWithGoogle();\n  }\n\n  async signInWithGitHub(): Promise<void> {\n    await this.authService.signInWithGitHub();\n  }\n\n  async signInWithApple(): Promise<void> {\n    await this.authService.signInWithApple();\n  }\n}"],
  "mappings": "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",
  "names": []
}
