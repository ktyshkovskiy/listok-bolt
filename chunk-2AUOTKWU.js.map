{"version":3,"sources":["node_modules/@angular/material/fesm2022/internal-form-field.mjs","node_modules/@angular/material/fesm2022/checkbox.mjs","src/app/models/list.model.ts","src/app/services/item.service.ts","src/app/components/list-detail/list-detail.component.ts","src/app/components/list-detail/list-detail.component.html"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nconst _c0 = [\"mat-internal-form-field\", \"\"];\nconst _c1 = [\"*\"];\nclass _MatInternalFormField {\n  /** Position of the label relative to the content. */\n  labelPosition;\n  static ɵfac = function _MatInternalFormField_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _MatInternalFormField)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _MatInternalFormField,\n    selectors: [[\"div\", \"mat-internal-form-field\", \"\"]],\n    hostAttrs: [1, \"mdc-form-field\", \"mat-internal-form-field\"],\n    hostVars: 2,\n    hostBindings: function _MatInternalFormField_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-form-field--align-end\", ctx.labelPosition === \"before\");\n      }\n    },\n    inputs: {\n      labelPosition: \"labelPosition\"\n    },\n    attrs: _c0,\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function _MatInternalFormField_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatInternalFormField, [{\n    type: Component,\n    args: [{\n      selector: 'div[mat-internal-form-field]',\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mdc-form-field mat-internal-form-field',\n        '[class.mdc-form-field--align-end]': 'labelPosition === \"before\"'\n      },\n      styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"]\n    }]\n  }], null, {\n    labelPosition: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }]\n  });\n})();\nexport { _MatInternalFormField };\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, ChangeDetectorRef, NgZone, EventEmitter, HostAttributeToken, signal, booleanAttribute, numberAttribute, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _MatInternalFormField } from './internal-form-field.mjs';\nimport { _animationsDisabled } from './animation.mjs';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { MatRipple } from './ripple.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst _c0 = [\"input\"];\nconst _c1 = [\"label\"];\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n  providedIn: 'root',\n  factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    color: 'accent',\n    clickAction: 'check-indeterminate',\n    disabledInteractive: false\n  };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState;\n(function (TransitionCheckState) {\n  /** The initial state of the component before any user interaction. */\n  TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n  /** The state representing the component when it's becoming checked. */\n  TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n  /** The state representing the component when it's becoming unchecked. */\n  TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n  /** The state representing the component when it's becoming indeterminate. */\n  TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(TransitionCheckState || (TransitionCheckState = {}));\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n  /** The source checkbox of the event. */\n  source;\n  /** The new `checked` value of the checkbox. */\n  checked;\n}\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _ngZone = inject(NgZone);\n  _animationsDisabled = _animationsDisabled();\n  _options = inject(MAT_CHECKBOX_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Focuses the checkbox. */\n  focus() {\n    this._inputElement.nativeElement.focus();\n  }\n  /** Creates the change event that will be emitted by the checkbox. */\n  _createChangeEvent(isChecked) {\n    const event = new MatCheckboxChange();\n    event.source = this;\n    event.checked = isChecked;\n    return event;\n  }\n  /** Gets the element on which to add the animation CSS classes. */\n  _getAnimationTargetElement() {\n    return this._inputElement?.nativeElement;\n  }\n  /** CSS classes to add when transitioning between the different checkbox states. */\n  _animationClasses = {\n    uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n    uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n    checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n    checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n    indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n    indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked'\n  };\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n   * take precedence so this may be omitted.\n   */\n  ariaLabel = '';\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  ariaLabelledby = null;\n  /** The 'aria-describedby' attribute is read after the element's label and field type. */\n  ariaDescribedby;\n  /**\n   * Users can specify the `aria-expanded` attribute which will be forwarded to the input element\n   */\n  ariaExpanded;\n  /**\n   * Users can specify the `aria-controls` attribute which will be forwarded to the input element\n   */\n  ariaControls;\n  /** Users can specify the `aria-owns` attribute which will be forwarded to the input element */\n  ariaOwns;\n  _uniqueId;\n  /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n  id;\n  /** Returns the unique id for the visual hidden input. */\n  get inputId() {\n    return `${this.id || this._uniqueId}-input`;\n  }\n  /** Whether the checkbox is required. */\n  required;\n  /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n  labelPosition = 'after';\n  /** Name value will be applied to the input element if present */\n  name = null;\n  /** Event emitted when the checkbox's `checked` value changes. */\n  change = new EventEmitter();\n  /** Event emitted when the checkbox's `indeterminate` value changes. */\n  indeterminateChange = new EventEmitter();\n  /** The value attribute of the native input element */\n  value;\n  /** Whether the checkbox has a ripple. */\n  disableRipple;\n  /** The native `<input type=\"checkbox\">` element */\n  _inputElement;\n  /** The native `<label>` element */\n  _labelElement;\n  /** Tabindex for the checkbox. */\n  tabIndex;\n  // TODO(crisbeto): this should be a ThemePalette, but some internal apps were abusing\n  // the lack of type checking previously and assigning random strings.\n  /**\n   * Theme color of the checkbox. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/checkbox/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Whether the checkbox should remain interactive when it is disabled. */\n  disabledInteractive;\n  /**\n   * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n   * @docs-private\n   */\n  _onTouched = () => {};\n  _currentAnimationClass = '';\n  _currentCheckState = TransitionCheckState.Init;\n  _controlValueAccessorChangeFn = () => {};\n  _validatorChangeFn = () => {};\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    const tabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    });\n    this._options = this._options || defaults;\n    this.color = this._options.color || defaults.color;\n    this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n    this.id = this._uniqueId = inject(_IdGenerator).getId('mat-mdc-checkbox-');\n    this.disabledInteractive = this._options?.disabledInteractive ?? false;\n  }\n  ngOnChanges(changes) {\n    if (changes['required']) {\n      this._validatorChangeFn();\n    }\n  }\n  ngAfterViewInit() {\n    this._syncIndeterminate(this.indeterminate);\n  }\n  /** Whether the checkbox is checked. */\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    if (value != this.checked) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _checked = false;\n  /** Whether the checkbox is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    if (value !== this.disabled) {\n      this._disabled = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _disabled = false;\n  /**\n   * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n   * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n   * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n   * set to false.\n   */\n  get indeterminate() {\n    return this._indeterminate();\n  }\n  set indeterminate(value) {\n    const changed = value != this._indeterminate();\n    this._indeterminate.set(value);\n    if (changed) {\n      if (value) {\n        this._transitionCheckState(TransitionCheckState.Indeterminate);\n      } else {\n        this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      }\n      this.indeterminateChange.emit(value);\n    }\n    this._syncIndeterminate(value);\n  }\n  _indeterminate = signal(false, ...(ngDevMode ? [{\n    debugName: \"_indeterminate\"\n  }] : []));\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n  /** Method being called whenever the label text changes. */\n  _onLabelTextChange() {\n    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n    // component will be only marked for check, but no actual change detection runs automatically.\n    // Instead of going back into the zone in order to trigger a change detection which causes\n    // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n    // an explicit change detection for the checkbox view and its children.\n    this._changeDetectorRef.detectChanges();\n  }\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value) {\n    this.checked = !!value;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  // Implemented as a part of Validator.\n  validate(control) {\n    return this.required && control.value !== true ? {\n      'required': true\n    } : null;\n  }\n  // Implemented as a part of Validator.\n  registerOnValidatorChange(fn) {\n    this._validatorChangeFn = fn;\n  }\n  _transitionCheckState(newState) {\n    let oldState = this._currentCheckState;\n    let element = this._getAnimationTargetElement();\n    if (oldState === newState || !element) {\n      return;\n    }\n    if (this._currentAnimationClass) {\n      element.classList.remove(this._currentAnimationClass);\n    }\n    this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n    this._currentCheckState = newState;\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.add(this._currentAnimationClass);\n      // Remove the animation class to avoid animation when the checkbox is moved between containers\n      const animationClass = this._currentAnimationClass;\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          element.classList.remove(animationClass);\n        }, 1000);\n      });\n    }\n  }\n  _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(this._createChangeEvent(this.checked));\n    // Assigning the value again here is redundant, but we have to do it in case it was\n    // changed inside the `change` listener which will cause the input to be out of sync.\n    if (this._inputElement) {\n      this._inputElement.nativeElement.checked = this.checked;\n    }\n  }\n  /** Toggles the `checked` state of the checkbox. */\n  toggle() {\n    this.checked = !this.checked;\n    this._controlValueAccessorChangeFn(this.checked);\n  }\n  _handleInputClick() {\n    const clickAction = this._options?.clickAction;\n    // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n    if (!this.disabled && clickAction !== 'noop') {\n      // When user manually click on the checkbox, `indeterminate` is set to false.\n      if (this.indeterminate && clickAction !== 'check') {\n        Promise.resolve().then(() => {\n          this._indeterminate.set(false);\n          this.indeterminateChange.emit(false);\n        });\n      }\n      this._checked = !this._checked;\n      this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      // Emit our custom change event if the native input emitted one.\n      // It is important to only emit it, if the native input triggered one, because\n      // we don't want to trigger a change event, when the `checked` variable changes for example.\n      this._emitChangeEvent();\n    } else if (this.disabled && this.disabledInteractive || !this.disabled && clickAction === 'noop') {\n      // Reset native input when clicked with noop. The native checkbox becomes checked after\n      // click, reset it to be align with `checked` value of `mat-checkbox`.\n      this._inputElement.nativeElement.checked = this.checked;\n      this._inputElement.nativeElement.indeterminate = this.indeterminate;\n    }\n  }\n  _onInteractionEvent(event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n  _onBlur() {\n    // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n    // Angular does not expect events to be raised during change detection, so any state change\n    // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n    // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n    // telling the form control it has been touched until the next tick.\n    Promise.resolve().then(() => {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  _getAnimationClassForCheckStateTransition(oldState, newState) {\n    // Don't transition if animations are disabled.\n    if (this._animationsDisabled) {\n      return '';\n    }\n    switch (oldState) {\n      case TransitionCheckState.Init:\n        // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n        // [checked] bound to it.\n        if (newState === TransitionCheckState.Checked) {\n          return this._animationClasses.uncheckedToChecked;\n        } else if (newState == TransitionCheckState.Indeterminate) {\n          return this._checked ? this._animationClasses.checkedToIndeterminate : this._animationClasses.uncheckedToIndeterminate;\n        }\n        break;\n      case TransitionCheckState.Unchecked:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.uncheckedToChecked : this._animationClasses.uncheckedToIndeterminate;\n      case TransitionCheckState.Checked:\n        return newState === TransitionCheckState.Unchecked ? this._animationClasses.checkedToUnchecked : this._animationClasses.checkedToIndeterminate;\n      case TransitionCheckState.Indeterminate:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.indeterminateToChecked : this._animationClasses.indeterminateToUnchecked;\n    }\n    return '';\n  }\n  /**\n   * Syncs the indeterminate value with the checkbox DOM node.\n   *\n   * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n   * property is supported on an element boils down to `if (propName in element)`. Domino's\n   * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n   * server-side rendering.\n   */\n  _syncIndeterminate(value) {\n    const nativeCheckbox = this._inputElement;\n    if (nativeCheckbox) {\n      nativeCheckbox.nativeElement.indeterminate = value;\n    }\n  }\n  _onInputClick() {\n    this._handleInputClick();\n  }\n  _onTouchTargetClick() {\n    this._handleInputClick();\n    if (!this.disabled) {\n      // Normally the input should be focused already, but if the click\n      // comes from the touch target, then we might have to focus it ourselves.\n      this._inputElement.nativeElement.focus();\n    }\n  }\n  /**\n   *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n   *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n   *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n   *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n   *  bubbles when the label is clicked.\n   */\n  _preventBubblingFromLabel(event) {\n    if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n      event.stopPropagation();\n    }\n  }\n  static ɵfac = function MatCheckbox_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCheckbox)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCheckbox,\n    selectors: [[\"mat-checkbox\"]],\n    viewQuery: function MatCheckbox_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelElement = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-checkbox\"],\n    hostVars: 16,\n    hostBindings: function MatCheckbox_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-labelledby\", null);\n        i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"mat-accent\");\n        i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationsDisabled)(\"mdc-checkbox--disabled\", ctx.disabled)(\"mat-mdc-checkbox-disabled\", ctx.disabled)(\"mat-mdc-checkbox-checked\", ctx.checked)(\"mat-mdc-checkbox-disabled-interactive\", ctx.disabledInteractive);\n      }\n    },\n    inputs: {\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n      ariaExpanded: [2, \"aria-expanded\", \"ariaExpanded\", booleanAttribute],\n      ariaControls: [0, \"aria-controls\", \"ariaControls\"],\n      ariaOwns: [0, \"aria-owns\", \"ariaOwns\"],\n      id: \"id\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      labelPosition: \"labelPosition\",\n      name: \"name\",\n      value: \"value\",\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? undefined : numberAttribute(value)],\n      color: \"color\",\n      disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute],\n      checked: [2, \"checked\", \"checked\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      indeterminate: [2, \"indeterminate\", \"indeterminate\", booleanAttribute]\n    },\n    outputs: {\n      change: \"change\",\n      indeterminateChange: \"indeterminateChange\"\n    },\n    exportAs: [\"matCheckbox\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MatCheckbox),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: MatCheckbox,\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c2,\n    decls: 15,\n    vars: 23,\n    consts: [[\"checkbox\", \"\"], [\"input\", \"\"], [\"label\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"click\", \"labelPosition\"], [1, \"mdc-checkbox\"], [1, \"mat-mdc-checkbox-touch-target\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"mdc-checkbox__native-control\", 3, \"blur\", \"click\", \"change\", \"checked\", \"indeterminate\", \"disabled\", \"id\", \"required\", \"tabIndex\"], [1, \"mdc-checkbox__ripple\"], [1, \"mdc-checkbox__background\"], [\"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-checkbox__checkmark\"], [\"fill\", \"none\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-checkbox__checkmark-path\"], [1, \"mdc-checkbox__mixedmark\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-label\", 3, \"for\"]],\n    template: function MatCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 3);\n        i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._preventBubblingFromLabel($event));\n        });\n        i0.ɵɵelementStart(1, \"div\", 4, 0)(3, \"div\", 5);\n        i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onTouchTargetClick());\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 6, 1);\n        i0.ɵɵlistener(\"blur\", function MatCheckbox_Template_input_blur_4_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onBlur());\n        })(\"click\", function MatCheckbox_Template_input_click_4_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onInputClick());\n        })(\"change\", function MatCheckbox_Template_input_change_4_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onInteractionEvent($event));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"div\", 7);\n        i0.ɵɵelementStart(7, \"div\", 8);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(8, \"svg\", 9);\n        i0.ɵɵelement(9, \"path\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelement(10, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"label\", 13, 2);\n        i0.ɵɵprojection(14);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const checkbox_r2 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"mdc-checkbox--selected\", ctx.checked);\n        i0.ɵɵproperty(\"checked\", ctx.checked)(\"indeterminate\", ctx.indeterminate)(\"disabled\", ctx.disabled && !ctx.disabledInteractive)(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-checked\", ctx.indeterminate ? \"mixed\" : null)(\"aria-controls\", ctx.ariaControls)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? true : null)(\"aria-expanded\", ctx.ariaExpanded)(\"aria-owns\", ctx.ariaOwns)(\"name\", ctx.name)(\"value\", ctx.value);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"matRippleTrigger\", checkbox_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"for\", ctx.inputId);\n      }\n    },\n    dependencies: [MatRipple, _MatInternalFormField],\n    styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mat-checkbox-state-layer-size, 40px);height:var(--mat-checkbox-state-layer-size, 40px);top:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);right:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mat-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:var(--mat-checkbox-touch-target-size, 48px);width:var(--mat-checkbox-touch-target-size, 48px);transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-checkbox',\n      host: {\n        'class': 'mat-mdc-checkbox',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[class.mdc-checkbox--disabled]': 'disabled',\n        '[id]': 'id',\n        // Add classes that users can use to more easily target disabled or checked checkboxes.\n        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n        '[class.mat-mdc-checkbox-checked]': 'checked',\n        '[class.mat-mdc-checkbox-disabled-interactive]': 'disabledInteractive',\n        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => MatCheckbox),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: MatCheckbox,\n        multi: true\n      }],\n      exportAs: 'matCheckbox',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatRipple, _MatInternalFormField],\n      template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-controls]=\\\"ariaControls\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n           [attr.aria-owns]=\\\"ariaOwns\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\",\n      styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mat-checkbox-state-layer-size, 40px);height:var(--mat-checkbox-state-layer-size, 40px);top:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);right:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mat-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:var(--mat-checkbox-touch-target-size, 48px);width:var(--mat-checkbox-touch-target-size, 48px);transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\\n\"]\n    }]\n  }], () => [], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    ariaExpanded: [{\n      type: Input,\n      args: [{\n        alias: 'aria-expanded',\n        transform: booleanAttribute\n      }]\n    }],\n    ariaControls: [{\n      type: Input,\n      args: ['aria-controls']\n    }],\n    ariaOwns: [{\n      type: Input,\n      args: ['aria-owns']\n    }],\n    id: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    indeterminateChange: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    _inputElement: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    _labelElement: [{\n      type: ViewChild,\n      args: ['label']\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? undefined : numberAttribute(value)\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    indeterminate: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass MatCheckboxModule {\n  static ɵfac = function MatCheckboxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCheckboxModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatCheckboxModule,\n    imports: [MatCheckbox, MatCommonModule],\n    exports: [MatCheckbox, MatCommonModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCheckbox, MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCheckbox, MatCommonModule],\n      exports: [MatCheckbox, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MatCheckbox, MatCheckboxChange, MatCheckboxModule, TransitionCheckState };\n","export interface ItemDetails {\n  id: string;\n  name: string;\n  img?: string;\n  comment?: string;\n}\n\nexport interface Item {\n  id: string;\n  item: ItemDetails;\n  count: number;\n  color?: string;\n  status: ItemStatus;\n}\n\nexport enum ItemStatus {\n  ToBuy = 'to_buy',\n  Bought = 'bought'\n}\n\nexport interface List {\n  id: string;\n  name: string;\n  comment?: string;\n  img?: string;\n  items: Item[];\n}\n\nexport interface Problem {\n  type?: string;\n  title?: string;\n  status?: string;\n  detail?: string;\n}\n\nexport interface CreateListRequest {\n  name: string;\n  comment?: string;\n  img?: string;\n  items?: Item[];\n}\n\nexport interface CreateItemRequest {\n  item: ItemDetails;\n  count: number;\n  color?: string;\n  status: ItemStatus;\n}\n","import { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Item, ItemStatus } from '../models/list.model';\nimport { Item as ApiItem, ItemApiService, ItemFields, ItemStatus as ApiItemStatusEnum } from \"../generated/api\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n  private itemService = inject(ItemApiService);\n\n  createItemInList(listId: string, item: Partial<Item>): Observable<Item> {\n    const apiItem = this.mapItemToItemFields(item as Item);\n    return this.itemService.addItemToList(listId, apiItem).pipe(\n      map(value => this.mapApiItemToItem(value))\n    );\n  }\n\n  getItemById(id: string): Observable<Item> {\n    return this.itemService.getItem(id).pipe(\n      map(value => this.mapApiItemToItem(value))\n    );\n  }\n\n  updateItem(id: string, item: Partial<Item>): Observable<Item> {\n    const apiItem = this.mapItemToItemFields(item as Item);\n    // Note: Update endpoint not defined in OpenAPI spec, using create for now\n    return this.itemService.updateItem(id, apiItem).pipe(\n      map(value => this.mapApiItemToItem(value))\n    );\n  }\n\n  deleteItem(id: string): Observable<Item> {\n    return this.itemService.deleteItem(id).pipe(\n      map(value => this.mapApiItemToItem(value))\n    );\n  }\n\n  private mapApiItemToItem(apiItem: ApiItem): Item {\n    return {\n      id: apiItem.id,\n      item: apiItem.product,\n      count: apiItem.count,\n      color: apiItem.groupColor,\n      status: this.mapItemStatusFromApi(apiItem.status)\n    };\n  }\n\n  private mapItemToItemFields(item: Item): ItemFields {\n    return {\n      product: item.item,\n      count: item.count,\n      groupColor: item.color,\n      status: this.mapItemStatusToApi(item.status)\n    };\n\n  }\n\n  private mapItemStatusToApi(status: ItemStatus): ApiItemStatusEnum {\n    return status;\n  }\n\n  private mapItemStatusFromApi(status: ApiItemStatusEnum): ItemStatus {\n    return status;\n  }\n}\n","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Item, ItemStatus, List } from '../../models/list.model';\nimport { ItemService } from \"../../services/item.service\";\nimport { ListService } from \"../../services/list.service\";\n\ninterface ItemGroup {\n  color: string | null;\n  items: Item[];\n}\n\n\n@Component({\n  selector: 'app-list-detail',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatChipsModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    RouterModule\n  ],\n  templateUrl: './list-detail.component.html',\n  styleUrl: './list-detail.component.scss'\n})\nexport class ListDetailComponent implements OnInit, OnDestroy {\n  list: List | null = null;\n  loading = true;\n\n  private destroy$ = new Subject<void>();\n\n  private route: ActivatedRoute = inject(ActivatedRoute);\n  private router: Router = inject(Router);\n  private apiItemService: ItemService = inject(ItemService);\n  private apiListService: ListService = inject(ListService);\n  private snackBar: MatSnackBar = inject(MatSnackBar);\n\n  ngOnInit(): void {\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe(params => {\n      if (params['id']) {\n        this.loadList(params['id']);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  loadList(id: string): void {\n    this.loading = true;\n    this.apiListService.getListById(id).subscribe({\n      next: (list) => {\n        this.list = list;\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Error loading list:', error);\n        this.snackBar.open('Error loading list', 'Close', {duration: 3000});\n        this.loading = false;\n      }\n    });\n  }\n\n  get itemsToBuy(): number {\n    return this.list?.items.filter(item => item.status === 'to_buy').length || 0;\n  }\n\n  get itemsBought(): number {\n    return this.list?.items.filter(item => item.status === 'bought').length || 0;\n  }\n\n  get completionRate(): number {\n    if (!this.list || this.list.items.length === 0) return 0;\n    return Math.round((this.itemsBought / this.list.items.length) * 100);\n  }\n\n  get itemsToBuyList(): Item[] {\n    return this.sortItemsByColor(\n      this.list?.items.filter(item => item.status === 'to_buy') || []\n    );\n  }\n\n  get itemsBoughtList(): Item[] {\n    return this.sortItemsByColor(\n      this.list?.items.filter(item => item.status === 'bought') || []\n    );\n  }\n\n  get itemsToBuyGroups(): ItemGroup[] {\n    return this.groupItemsByColor(this.itemsToBuyList);\n  }\n\n  get itemsBoughtGroups(): ItemGroup[] {\n    return this.groupItemsByColor(this.itemsBoughtList);\n  }\n\n  private sortItemsByColor(items: Item[]): Item[] {\n    return items.sort((a, b) => {\n      const colorA = a.color || '';\n      const colorB = b.color || '';\n\n      // Items without color go to the end\n      if (!colorA && colorB) return 1;\n      if (colorA && !colorB) return -1;\n      if (!colorA && !colorB) return 0;\n\n      // Sort by color value\n      return colorA.localeCompare(colorB);\n    });\n  }\n\n  private groupItemsByColor(items: Item[]): ItemGroup[] {\n    const groups: ItemGroup[] = [];\n    let currentGroup: ItemGroup | null = null;\n\n    items.forEach(item => {\n      const color = item.color || null;\n\n      if (!currentGroup || currentGroup.color !== color) {\n        currentGroup = { color, items: [] };\n        groups.push(currentGroup);\n      }\n\n      currentGroup.items.push(item);\n    });\n\n    return groups;\n  }\n\n  toggleItemStatus(item: Item): void {\n    const newStatus = item.status === ItemStatus.Bought ? ItemStatus.ToBuy : ItemStatus.Bought;\n    this.apiItemService.updateItem(item.id, {status: newStatus}).subscribe({\n      next: (updatedItem) => {\n        if (this.list && updatedItem) {\n          const index = this.list.items.findIndex(i => i.id === item.id);\n          if (index !== -1) {\n            this.list.items[index] = updatedItem;\n          }\n        }\n        this.snackBar.open(\n          `Item marked as ${item.status === ItemStatus.Bought ? 'bought' : 'to buy'}`,\n          'Close',\n          {duration: 2000}\n        );\n      },\n      error: (error) => {\n        console.error('Error updating item:', error);\n        this.snackBar.open('Error updating item', 'Close', {duration: 3000});\n      }\n    });\n  }\n\n  editItem(item: Item): void {\n    this.router.navigate(['/items', item.id, 'edit']);\n  }\n\n  deleteItem(item: Item): void {\n    if (confirm(`Are you sure you want to delete \"${item.item.name}\"?`)) {\n      this.apiItemService.deleteItem(item.id).subscribe({\n        next: () => {\n          if (this.list) {\n            this.list.items = this.list.items.filter(i => i.id !== item.id);\n          }\n          this.snackBar.open('Item deleted successfully', 'Close', {duration: 2000});\n        },\n        error: (error) => {\n          console.error('Error deleting item:', error);\n          this.snackBar.open('Error deleting item', 'Close', {duration: 3000});\n        }\n      });\n    }\n  }\n\n  deleteList(): void {\n    if (!this.list) return;\n\n    if (confirm(`Are you sure you want to delete \"${this.list.name}\"?`)) {\n      this.apiListService.deleteList(this.list.id).subscribe({\n        next: () => {\n          this.snackBar.open('List deleted successfully', 'Close', {duration: 2000});\n          this.router.navigate(['/dashboard']);\n        },\n        error: (error) => {\n          console.error('Error deleting list:', error);\n          this.snackBar.open('Error deleting list', 'Close', {duration: 3000});\n        }\n      });\n    }\n  }\n\n  goBack(): void {\n    this.router.navigate(['/dashboard']);\n  }\n}\n","    <div class=\"list-detail-container\" *ngIf=\"!loading\">\n      <mat-toolbar class=\"list-toolbar\">\n        <button mat-icon-button (click)=\"goBack()\">\n          <mat-icon>arrow_back</mat-icon>\n        </button>\n        \n        <div class=\"list-header-info\">\n          <h1 class=\"list-title\">{{ list?.name }}</h1>\n          <p class=\"list-subtitle\" *ngIf=\"list?.comment\">{{ list?.comment }}</p>\n        </div>\n        \n        <span class=\"spacer\"></span>\n        \n        <button mat-button [routerLink]=\"['/items/new']\" [queryParams]=\"{listId: list?.id}\">\n          <mat-icon>add</mat-icon>\n          Add Item\n        </button>\n        \n        <button mat-icon-button [matMenuTriggerFor]=\"listMenu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        \n        <mat-menu #listMenu=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/lists', list?.id, 'edit']\">\n            <mat-icon>edit</mat-icon>\n            Edit List\n          </button>\n          <button mat-menu-item (click)=\"deleteList()\" class=\"delete-button\">\n            <mat-icon>delete</mat-icon>\n            Delete List\n          </button>\n        </mat-menu>\n      </mat-toolbar>\n\n      <div class=\"list-content\" *ngIf=\"list\">\n        <div class=\"list-hero\" *ngIf=\"list.img\">\n          <img [src]=\"list.img\" [alt]=\"list.name\" class=\"list-image\">\n        </div>\n\n        <div class=\"list-stats\">\n          <mat-card class=\"stat-card\">\n            <mat-card-content>\n              <div class=\"stat-content\">\n                <mat-icon class=\"stat-icon\">assignment</mat-icon>\n                <h3>{{ list.items.length }}</h3>\n                <p>Total Items</p>\n              </div>\n            </mat-card-content>\n          </mat-card>\n\n          <mat-card class=\"stat-card\">\n            <mat-card-content>\n              <div class=\"stat-content\">\n                <mat-icon class=\"stat-icon to-buy\">shopping_cart</mat-icon>\n                <h3>{{ itemsToBuy }}</h3>\n                <p>To Buy</p>\n              </div>\n            </mat-card-content>\n          </mat-card>\n\n          <mat-card class=\"stat-card\">\n            <mat-card-content>\n              <div class=\"stat-content\">\n                <mat-icon class=\"stat-icon bought\">done</mat-icon>\n                <h3>{{ itemsBought }}</h3>\n                <p>Completed</p>\n              </div>\n            </mat-card-content>\n          </mat-card>\n\n          <mat-card class=\"stat-card\">\n            <mat-card-content>\n              <div class=\"stat-content\">\n                <mat-icon class=\"stat-icon progress\">percent</mat-icon>\n                <h3>{{ completionRate }}%</h3>\n                <p>Progress</p>\n              </div>\n            </mat-card-content>\n          </mat-card>\n        </div>\n\n        <!-- Items To Buy Section -->\n        <div class=\"items-section\" *ngIf=\"itemsToBuyList.length > 0 || itemsBoughtList.length === 0\">\n          <div class=\"section-header\">\n            <h2>Items to Buy</h2>\n            <span class=\"item-count-badge\">{{ itemsToBuyList.length }}</span>\n          </div>\n\n          <div class=\"items-grid\" *ngIf=\"itemsToBuyList.length > 0\">\n            <div class=\"color-group\" *ngFor=\"let group of itemsToBuyGroups\">\n              <div class=\"color-bar\" *ngIf=\"group.color\" [style.background-color]=\"group.color\"></div>\n              <div class=\"group-items\">\n                <div class=\"item-row\" *ngFor=\"let item of group.items\">\n                  <mat-checkbox\n                    [checked]=\"false\"\n                    (change)=\"toggleItemStatus(item)\"\n                    class=\"item-checkbox\">\n                  </mat-checkbox>\n\n                  <div class=\"item-image\" *ngIf=\"item.item.img\">\n                    <img [src]=\"item.item.img\" [alt]=\"item.item.name\">\n                  </div>\n\n                  <div class=\"item-info\">\n                    <h3 class=\"item-name\">{{ item.item.name }}</h3>\n                    <p class=\"item-comment\" *ngIf=\"item.item.comment\">{{ item.item.comment }}</p>\n                  </div>\n\n                  <div class=\"item-details\">\n                    <span class=\"item-quantity\">Quantity: {{ item.count }}</span>\n                  </div>\n\n                  <button mat-icon-button [matMenuTriggerFor]=\"itemMenu\" class=\"item-menu-button\">\n                    <mat-icon>more_vert</mat-icon>\n                  </button>\n\n                  <mat-menu #itemMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"editItem(item)\">\n                      <mat-icon>edit</mat-icon>\n                      Edit\n                    </button>\n                    <button mat-menu-item (click)=\"deleteItem(item)\" class=\"delete-button\">\n                      <mat-icon>delete</mat-icon>\n                      Delete\n                    </button>\n                  </mat-menu>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"empty-state\" *ngIf=\"itemsToBuyList.length === 0 && itemsBoughtList.length === 0\">\n            <mat-icon class=\"empty-icon\">assignment</mat-icon>\n            <h3>No items yet</h3>\n            <p>Add your first item to get started.</p>\n            <button mat-raised-button color=\"primary\" [routerLink]=\"['/items/new']\" [queryParams]=\"{listId: list.id}\">\n              <mat-icon>add</mat-icon>\n              Add First Item\n            </button>\n          </div>\n\n          <div class=\"empty-state\" *ngIf=\"itemsToBuyList.length === 0 && itemsBoughtList.length > 0\">\n            <mat-icon class=\"empty-icon\">done_all</mat-icon>\n            <h3>All items completed!</h3>\n            <p>Great job! You've completed all items in this list.</p>\n          </div>\n        </div>\n\n        <!-- Completed Items Section -->\n        <div class=\"items-section\" *ngIf=\"itemsBoughtList.length > 0\">\n          <div class=\"section-header\">\n            <h2>Completed Items</h2>\n            <span class=\"item-count-badge completed\">{{ itemsBoughtList.length }}</span>\n          </div>\n\n          <div class=\"items-grid\">\n            <div class=\"color-group\" *ngFor=\"let group of itemsBoughtGroups\">\n              <div class=\"color-bar\" *ngIf=\"group.color\" [style.background-color]=\"group.color\"></div>\n              <div class=\"group-items\">\n                <div class=\"item-row bought\" *ngFor=\"let item of group.items\">\n                  <mat-checkbox\n                    [checked]=\"true\"\n                    (change)=\"toggleItemStatus(item)\"\n                    class=\"item-checkbox\">\n                  </mat-checkbox>\n\n                  <div class=\"item-image\" *ngIf=\"item.item.img\">\n                    <img [src]=\"item.item.img\" [alt]=\"item.item.name\">\n                  </div>\n\n                  <div class=\"item-info\">\n                    <h3 class=\"item-name bought-text\">{{ item.item.name }}</h3>\n                    <p class=\"item-comment bought-text\" *ngIf=\"item.item.comment\">{{ item.item.comment }}</p>\n                  </div>\n\n                  <div class=\"item-details\">\n                    <span class=\"item-quantity bought-text\">Quantity: {{ item.count }}</span>\n                  </div>\n\n                  <button mat-icon-button [matMenuTriggerFor]=\"itemMenu\" class=\"item-menu-button\">\n                    <mat-icon>more_vert</mat-icon>\n                  </button>\n\n                  <mat-menu #itemMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"editItem(item)\">\n                      <mat-icon>edit</mat-icon>\n                      Edit\n                    </button>\n                    <button mat-menu-item (click)=\"deleteItem(item)\" class=\"delete-button\">\n                      <mat-icon>delete</mat-icon>\n                      Delete\n                    </button>\n                  </mat-menu>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"loading-container\" *ngIf=\"loading\">\n      <mat-spinner diameter=\"50\"></mat-spinner>\n      <p>Loading list details...</p>\n    </div>\n"],"mappings":"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","names":["_c0","_c1","TransitionCheckState","ItemStatus","_c0","_c1","_c2"],"x_google_ignoreList":[0,1]}